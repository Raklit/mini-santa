<rooms-page>
<div class="container padding-0">
    <div class="row">
        <div class="column">
            <h4>Rooms list</h4>
            <div class="container">
                <div each={item in state.rooms} class="row pool-row-block">
                    <div class="column">
                        <span><a href="{state.baseUrl}/chats/id/{item.id}">"{item.pool_name}"</a><span>&nbsp;</span>{item.am_i_recipient ? "your Santa is here" : `recipient \"${item.recipient_nickname}\"`}<span>&nbsp;</span>(room state {getRoomStateFromNum(item.room_state)})</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script lang="js">
    import ApiHelper from '../api-helper.js';

    let state = {
        baseUrl: ApiHelper.apiBaseUrl(),
        rooms: new Array(),
        timer: null
    };

    let props = null;

    let getRoomStateFromNum = ApiHelper.getRoomStateFromNum;
    
    async function loadRooms() {
         try {
            const resp_json = await ApiHelper.getRooms();
            if (resp_json.status == 'OK') {
                this.state.rooms = resp_json.body;
                await this.addAmIRecipientField();
                this.update();
            }
        } catch (error) {
            console.log('Error while request: ', error.message);
        }
    }

    async function addAmIRecipientField() {
        const resp_json = await ApiHelper.getId();
        if (!resp_json || !resp_json.status || resp_json.status != 'OK') { return; }
        const my_id = resp_json.body;
        const arr = this.state?.rooms ?? new Array();
        const n = arr.length;
        for (let i = 0; i < n; i += 1) {
            this.state.rooms[i].am_i_recipient = this.state.rooms[i].recipient_id == my_id;
        }
    }

    async function fetchRoomsData() {
        await this.loadRooms();
    }

    async function loadData() {
        const ROOMS_UPDATE_INTERVAL = 5000;
        this.fetchRoomsData();
        if (this.state.timer == null) {
            this.state.timer = setInterval(() => {this.fetchRoomsData();}, ROOMS_UPDATE_INTERVAL);
        }
    }

    export default {state, props,

        onMounted(props, state) {
            this.loadData();
        },

        onBeforeUnmount(props, state) {
            if (this.state.timer != null) {
                clearInterval(this.state.timer);
                this.state.timer = null;
                this.update();
            }
        },

        loadRooms, getRoomStateFromNum, fetchRoomsData, addAmIRecipientField, loadData
    }
</script>
</rooms-page>