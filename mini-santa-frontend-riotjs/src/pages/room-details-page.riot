<room-details-page>
<div class="container padding-0">
    <div class="row">
        <div class="column">
            <div class="room-header-block">
                <div class="room-header-info-block">"{state?.room?.recipient_nickname ?? ""}" (pool "{state?.room?.pool_name ?? ""}")</div>
                <div class="room-header-buttons-block"><button class="button" if={isNotEnded()} onclick={onPushStateClick}>Push state</button></div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="column">
            <div id="message-list-block" class="container padding-0">
                <div each={item in state.messages} class="row">
                    <div class="column">
                        <div class="container message-block">
                            <div class="row">
                                <div class="column">
                                    <div class="message-avatar-block">
                                        Avatar
                                    </div>
                                    <div class="message-author-block">
                                        {item.is_recipient ? state?.room?.recipient_nickname ?? "" : "Santa"}
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="column">
                                    <div class="message-text-block">
                                        <pre class="simple-pre">{item.text_content}</pre>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="column">
            <div if={isNotEnded()} class="message-sender-block">
                <div class="message-sender-textarea-block">
                    <textarea id="message-sender-textarea"></textarea>
                </div>
                <div class="message-sender-button-block">
                    <button onclick={onSendButtonClick} id="message-sender-button" class="button">Send</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script lang="js">
import ApiHelper from '../api-helper.js';

let state = {
    room: null,
    messages: [],
    timer: null
};

function isNotEnded() {
    return (this.state?.room?.room_state ?? 7) != 7;
}

async function getRoom(id) {
    let resp_json = await ApiHelper.getRoom(id);
    if (resp_json.status == 'OK') {
        this.state.room = resp_json.body;
        this.state.room.room_state_desc = ApiHelper.getRoomStateFromNum(this.state.room.room_state);
    }
}

async function getLastMessagesInRoom(id) {
    let resp_json = await ApiHelper.getLastMessagesInRoom(id);
    if (resp_json.status == 'OK') {
        this.state.messages = resp_json.body;
    }
}

async function onPushStateClick() {
   // not implemented yet
}

async function onSendButtonClick() {
    let text_content = document.getElementById("message-sender-textarea").value;
    text_content = text_content.trim();
    if (text_content == null || text_content === "") { return; }

    let resp_json = await ApiHelper.sendMessage(this.props.object_id, text_content);
    if (resp_json.status == 'OK') {
        await this.fetchRoomData();
        let chat = document.getElementById("message-list-block");
        chat.scrollTo({ top: chat.scrollHeight, behavior: 'smooth' });
    }
}

async function fetchRoomData() {
    await this.getRoom(this.props.object_id);
    await this.getLastMessagesInRoom(this.props.object_id);
    this.update();
}

export default {state,
    async onMounted(props, state) {
        const CHAT_UPDATE_INTERVAL = 5000;
        await this.fetchRoomData();
        if (this.isNotEnded()) {
            this.state.timer = setInterval(async () => {await this.fetchRoomData();}, CHAT_UPDATE_INTERVAL);
        }
    },

    async onBeforeUnmount(props, state) {
        if (this.state.timer != null) {
            clearInterval(this.state.timer);
        }
    },

    getRoom, getLastMessagesInRoom, onPushStateClick, onSendButtonClick, fetchRoomData, isNotEnded
};
</script>
</room-details-page>